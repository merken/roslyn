using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Syntax;

namespace moksy.roslyn
{
    public static class TemplateMokGenerator
    {
        public static SyntaxTree GenerateTemplateMok(string typeNamespace, string type)
        {
            return SyntaxFactory.CompilationUnit()
                .WithUsings(
                    SyntaxFactory.List<UsingDirectiveSyntax>(
                        new UsingDirectiveSyntax[]{
                            SyntaxFactory.UsingDirective(
                                SyntaxFactory.IdentifierName("System")),
                            SyntaxFactory.UsingDirective(
                                SyntaxFactory.QualifiedName(
                                    SyntaxFactory.IdentifierName("moksy"),
                                    SyntaxFactory.IdentifierName("core"))),
                            SyntaxFactory.UsingDirective(
                                SyntaxFactory.QualifiedName(
                                    SyntaxFactory.IdentifierName("System"),
                                    SyntaxFactory.IdentifierName("Diagnostics")))}))
                .WithMembers(
                    SyntaxFactory.SingletonList<MemberDeclarationSyntax>(
                        SyntaxFactory.NamespaceDeclaration(
                            SyntaxFactory.IdentifierName($"{typeNamespace}"))
                        .WithMembers(
                        SyntaxFactory.SingletonList<MemberDeclarationSyntax>(
                            SyntaxFactory.ClassDeclaration($"{type}Mok")
                            .WithModifiers(
                                SyntaxFactory.TokenList(
                                    SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                            .WithBaseList(
                                SyntaxFactory.BaseList(
                                    SyntaxFactory.SingletonSeparatedList<BaseTypeSyntax>(
                                        SyntaxFactory.SimpleBaseType(
                                            SyntaxFactory.IdentifierName("IMok")))))
                            .WithMembers(
                                SyntaxFactory.List<MemberDeclarationSyntax>(
                                    new MemberDeclarationSyntax[]{
                                        SyntaxFactory.FieldDeclaration(
                                            SyntaxFactory.VariableDeclaration(
                                                SyntaxFactory.PredefinedType(
                                                    SyntaxFactory.Token(SyntaxKind.BoolKeyword)))
                                            .WithVariables(
                                                SyntaxFactory.SingletonSeparatedList<VariableDeclaratorSyntax>(
                                                    SyntaxFactory.VariableDeclarator(
                                                        SyntaxFactory.Identifier("callBase")))))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PrivateKeyword))),
                                        SyntaxFactory.FieldDeclaration(
                                            SyntaxFactory.VariableDeclaration(
                                                SyntaxFactory.IdentifierName("MokkedActions"))
                                            .WithVariables(
                                                SyntaxFactory.SingletonSeparatedList<VariableDeclaratorSyntax>(
                                                    SyntaxFactory.VariableDeclarator(
                                                        SyntaxFactory.Identifier("mokkedActions")))))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PrivateKeyword))),
                                        SyntaxFactory.FieldDeclaration(
                                            SyntaxFactory.VariableDeclaration(
                                                SyntaxFactory.GenericName(
                                                    SyntaxFactory.Identifier("MokkedActionsOfT"))
                                                .WithTypeArgumentList(
                                                    SyntaxFactory.TypeArgumentList(
                                                        SyntaxFactory.SingletonSeparatedList<TypeSyntax>(
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(SyntaxKind.ObjectKeyword))))))
                                            .WithVariables(
                                                SyntaxFactory.SingletonSeparatedList<VariableDeclaratorSyntax>(
                                                    SyntaxFactory.VariableDeclarator(
                                                        SyntaxFactory.Identifier("mokkedActionsOfT")))))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PrivateKeyword))),
                                        SyntaxFactory.FieldDeclaration(
                                            SyntaxFactory.VariableDeclaration(
                                                SyntaxFactory.GenericName(
                                                    SyntaxFactory.Identifier("MokkedActionsOfT"))
                                                .WithTypeArgumentList(
                                                    SyntaxFactory.TypeArgumentList(
                                                        SyntaxFactory.SeparatedList<TypeSyntax>(
                                                            new SyntaxNodeOrToken[]{
                                                                SyntaxFactory.PredefinedType(
                                                                    SyntaxFactory.Token(SyntaxKind.ObjectKeyword)),
                                                                SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                SyntaxFactory.PredefinedType(
                                                                    SyntaxFactory.Token(SyntaxKind.ObjectKeyword))}))))
                                            .WithVariables(
                                                SyntaxFactory.SingletonSeparatedList<VariableDeclaratorSyntax>(
                                                    SyntaxFactory.VariableDeclarator(
                                                        SyntaxFactory.Identifier("mokkedActionsOfT2")))))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PrivateKeyword))),
                                        SyntaxFactory.PropertyDeclaration(
                                            SyntaxFactory.IdentifierName("MokkedActions"),
                                            SyntaxFactory.Identifier("MokkedActions"))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                                        .WithExpressionBody(
                                            SyntaxFactory.ArrowExpressionClause(
                                                SyntaxFactory.IdentifierName("mokkedActions")))
                                        .WithSemicolonToken(
                                            SyntaxFactory.Token(SyntaxKind.SemicolonToken)),
                                        SyntaxFactory.PropertyDeclaration(
                                            SyntaxFactory.GenericName(
                                                SyntaxFactory.Identifier("MokkedActionsOfT"))
                                            .WithTypeArgumentList(
                                                SyntaxFactory.TypeArgumentList(
                                                    SyntaxFactory.SingletonSeparatedList<TypeSyntax>(
                                                        SyntaxFactory.PredefinedType(
                                                            SyntaxFactory.Token(SyntaxKind.ObjectKeyword))))),
                                            SyntaxFactory.Identifier("MokkedActionsOfT"))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                                        .WithExpressionBody(
                                            SyntaxFactory.ArrowExpressionClause(
                                                SyntaxFactory.IdentifierName("mokkedActionsOfT")))
                                        .WithSemicolonToken(
                                            SyntaxFactory.Token(SyntaxKind.SemicolonToken)),
                                        SyntaxFactory.PropertyDeclaration(
                                            SyntaxFactory.GenericName(
                                                SyntaxFactory.Identifier("MokkedActionsOfT"))
                                            .WithTypeArgumentList(
                                                SyntaxFactory.TypeArgumentList(
                                                    SyntaxFactory.SeparatedList<TypeSyntax>(
                                                        new SyntaxNodeOrToken[]{
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(SyntaxKind.ObjectKeyword)),
                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(SyntaxKind.ObjectKeyword))}))),
                                            SyntaxFactory.Identifier("MokkedActionsOfT2"))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                                        .WithExpressionBody(
                                            SyntaxFactory.ArrowExpressionClause(
                                                SyntaxFactory.IdentifierName("mokkedActionsOfT2")))
                                        .WithSemicolonToken(
                                            SyntaxFactory.Token(SyntaxKind.SemicolonToken)),
                                        SyntaxFactory.MethodDeclaration(
                                            SyntaxFactory.PredefinedType(
                                                SyntaxFactory.Token(SyntaxKind.VoidKeyword)),
                                            SyntaxFactory.Identifier("EnsureMokked"))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PrivateKeyword)))
                                        .WithBody(
                                            SyntaxFactory.Block(
                                                SyntaxFactory.IfStatement(
                                                    SyntaxFactory.BinaryExpression(
                                                        SyntaxKind.EqualsExpression,
                                                        SyntaxFactory.IdentifierName("mokkedActions"),
                                                        SyntaxFactory.LiteralExpression(
                                                            SyntaxKind.NullLiteralExpression)),
                                                    SyntaxFactory.ExpressionStatement(
                                                        SyntaxFactory.AssignmentExpression(
                                                            SyntaxKind.SimpleAssignmentExpression,
                                                            SyntaxFactory.IdentifierName("mokkedActions"),
                                                            SyntaxFactory.ObjectCreationExpression(
                                                                SyntaxFactory.IdentifierName("MokkedActions"))
                                                            .WithArgumentList(
                                                                SyntaxFactory.ArgumentList())))),
                                                SyntaxFactory.IfStatement(
                                                    SyntaxFactory.BinaryExpression(
                                                        SyntaxKind.EqualsExpression,
                                                        SyntaxFactory.IdentifierName("mokkedActionsOfT"),
                                                        SyntaxFactory.LiteralExpression(
                                                            SyntaxKind.NullLiteralExpression)),
                                                    SyntaxFactory.ExpressionStatement(
                                                        SyntaxFactory.AssignmentExpression(
                                                            SyntaxKind.SimpleAssignmentExpression,
                                                            SyntaxFactory.IdentifierName("mokkedActionsOfT"),
                                                            SyntaxFactory.ObjectCreationExpression(
                                                                SyntaxFactory.GenericName(
                                                                    SyntaxFactory.Identifier("MokkedActionsOfT"))
                                                                .WithTypeArgumentList(
                                                                    SyntaxFactory.TypeArgumentList(
                                                                        SyntaxFactory.SingletonSeparatedList<TypeSyntax>(
                                                                            SyntaxFactory.PredefinedType(
                                                                                SyntaxFactory.Token(SyntaxKind.ObjectKeyword))))))
                                                            .WithArgumentList(
                                                                SyntaxFactory.ArgumentList())))),
                                                SyntaxFactory.IfStatement(
                                                    SyntaxFactory.BinaryExpression(
                                                        SyntaxKind.EqualsExpression,
                                                        SyntaxFactory.IdentifierName("mokkedActionsOfT2"),
                                                        SyntaxFactory.LiteralExpression(
                                                            SyntaxKind.NullLiteralExpression)),
                                                    SyntaxFactory.ExpressionStatement(
                                                        SyntaxFactory.AssignmentExpression(
                                                            SyntaxKind.SimpleAssignmentExpression,
                                                            SyntaxFactory.IdentifierName("mokkedActionsOfT2"),
                                                            SyntaxFactory.ObjectCreationExpression(
                                                                SyntaxFactory.GenericName(
                                                                    SyntaxFactory.Identifier("MokkedActionsOfT"))
                                                                .WithTypeArgumentList(
                                                                    SyntaxFactory.TypeArgumentList(
                                                                        SyntaxFactory.SeparatedList<TypeSyntax>(
                                                                            new SyntaxNodeOrToken[]{
                                                                                SyntaxFactory.PredefinedType(
                                                                                    SyntaxFactory.Token(SyntaxKind.ObjectKeyword)),
                                                                                SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                                SyntaxFactory.PredefinedType(
                                                                                    SyntaxFactory.Token(SyntaxKind.ObjectKeyword))}))))
                                                            .WithArgumentList(
                                                                SyntaxFactory.ArgumentList())))))
                                            .WithCloseBraceToken(
                                                SyntaxFactory.Token(
                                                    SyntaxFactory.TriviaList(
                                                        SyntaxFactory.Comment("//todo")),
                                                    SyntaxKind.CloseBraceToken,
                                                    SyntaxFactory.TriviaList()))),
                                        SyntaxFactory.MethodDeclaration(
                                            SyntaxFactory.IdentifierName("IMok"),
                                            SyntaxFactory.Identifier("AddMokkedStuff"))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                                        .WithParameterList(
                                            SyntaxFactory.ParameterList(
                                                SyntaxFactory.SeparatedList<ParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("name"))
                                                        .WithType(
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(SyntaxKind.StringKeyword))),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("stuff"))
                                                        .WithType(
                                                            SyntaxFactory.IdentifierName("Action"))})))
                                        .WithBody(
                                            SyntaxFactory.Block(
                                                SyntaxFactory.ExpressionStatement(
                                                    SyntaxFactory.InvocationExpression(
                                                        SyntaxFactory.IdentifierName("EnsureMokked"))),
                                                SyntaxFactory.ExpressionStatement(
                                                    SyntaxFactory.InvocationExpression(
                                                        SyntaxFactory.MemberAccessExpression(
                                                            SyntaxKind.SimpleMemberAccessExpression,
                                                            SyntaxFactory.IdentifierName("mokkedActions"),
                                                            SyntaxFactory.IdentifierName("Add")))
                                                    .WithArgumentList(
                                                        SyntaxFactory.ArgumentList(
                                                            SyntaxFactory.SeparatedList<ArgumentSyntax>(
                                                                new SyntaxNodeOrToken[]{
                                                                    SyntaxFactory.Argument(
                                                                        SyntaxFactory.IdentifierName("name")),
                                                                    SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                    SyntaxFactory.Argument(
                                                                        SyntaxFactory.IdentifierName("stuff"))})))),
                                                SyntaxFactory.ReturnStatement(
                                                    SyntaxFactory.ThisExpression()))),
                                        SyntaxFactory.MethodDeclaration(
                                            SyntaxFactory.IdentifierName("IMok"),
                                            SyntaxFactory.Identifier("AddMokkedStuff"))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                                        .WithParameterList(
                                            SyntaxFactory.ParameterList(
                                                SyntaxFactory.SeparatedList<ParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("name"))
                                                        .WithType(
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(SyntaxKind.StringKeyword))),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("stuff"))
                                                        .WithType(
                                                            SyntaxFactory.GenericName(
                                                                SyntaxFactory.Identifier("Action"))
                                                            .WithTypeArgumentList(
                                                                SyntaxFactory.TypeArgumentList(
                                                                    SyntaxFactory.SingletonSeparatedList<TypeSyntax>(
                                                                        SyntaxFactory.PredefinedType(
                                                                            SyntaxFactory.Token(SyntaxKind.ObjectKeyword))))))})))
                                        .WithBody(
                                            SyntaxFactory.Block(
                                                SyntaxFactory.ExpressionStatement(
                                                    SyntaxFactory.InvocationExpression(
                                                        SyntaxFactory.IdentifierName("EnsureMokked"))),
                                                SyntaxFactory.ExpressionStatement(
                                                    SyntaxFactory.InvocationExpression(
                                                        SyntaxFactory.MemberAccessExpression(
                                                            SyntaxKind.SimpleMemberAccessExpression,
                                                            SyntaxFactory.IdentifierName("mokkedActionsOfT"),
                                                            SyntaxFactory.IdentifierName("Add")))
                                                    .WithArgumentList(
                                                        SyntaxFactory.ArgumentList(
                                                            SyntaxFactory.SeparatedList<ArgumentSyntax>(
                                                                new SyntaxNodeOrToken[]{
                                                                    SyntaxFactory.Argument(
                                                                        SyntaxFactory.IdentifierName("name")),
                                                                    SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                    SyntaxFactory.Argument(
                                                                        SyntaxFactory.IdentifierName("stuff"))})))),
                                                SyntaxFactory.ReturnStatement(
                                                    SyntaxFactory.ThisExpression()))),
                                        SyntaxFactory.MethodDeclaration(
                                            SyntaxFactory.IdentifierName("IMok"),
                                            SyntaxFactory.Identifier("AddMokkedStuff"))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                                        .WithParameterList(
                                            SyntaxFactory.ParameterList(
                                                SyntaxFactory.SeparatedList<ParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("name"))
                                                        .WithType(
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(SyntaxKind.StringKeyword))),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("stuff"))
                                                        .WithType(
                                                            SyntaxFactory.GenericName(
                                                                SyntaxFactory.Identifier("Func"))
                                                            .WithTypeArgumentList(
                                                                SyntaxFactory.TypeArgumentList(
                                                                    SyntaxFactory.SingletonSeparatedList<TypeSyntax>(
                                                                        SyntaxFactory.PredefinedType(
                                                                            SyntaxFactory.Token(SyntaxKind.ObjectKeyword))))))})))
                                        .WithBody(
                                            SyntaxFactory.Block(
                                                SyntaxFactory.ExpressionStatement(
                                                    SyntaxFactory.InvocationExpression(
                                                        SyntaxFactory.IdentifierName("EnsureMokked"))),
                                                SyntaxFactory.ReturnStatement(
                                                    SyntaxFactory.ThisExpression()))),
                                        SyntaxFactory.MethodDeclaration(
                                            SyntaxFactory.PredefinedType(
                                                SyntaxFactory.Token(SyntaxKind.VoidKeyword)),
                                            SyntaxFactory.Identifier("ExecuteMokked"))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.ProtectedKeyword)))
                                        .WithParameterList(
                                            SyntaxFactory.ParameterList(
                                                SyntaxFactory.SeparatedList<ParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("mokkedStuffKey"))
                                                        .WithType(
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(SyntaxKind.StringKeyword))),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("first"))
                                                        .WithType(
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(SyntaxKind.ObjectKeyword)))
                                                        .WithDefault(
                                                            SyntaxFactory.EqualsValueClause(
                                                                SyntaxFactory.LiteralExpression(
                                                                    SyntaxKind.NullLiteralExpression))),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("second"))
                                                        .WithType(
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(SyntaxKind.ObjectKeyword)))
                                                        .WithDefault(
                                                            SyntaxFactory.EqualsValueClause(
                                                                SyntaxFactory.LiteralExpression(
                                                                    SyntaxKind.NullLiteralExpression)))})))
                                        .WithBody(
                                            SyntaxFactory.Block(
                                                SyntaxFactory.IfStatement(
                                                    SyntaxFactory.InvocationExpression(
                                                        SyntaxFactory.MemberAccessExpression(
                                                            SyntaxKind.SimpleMemberAccessExpression,
                                                            SyntaxFactory.IdentifierName("mokkedActions"),
                                                            SyntaxFactory.IdentifierName("ContainsKey")))
                                                    .WithArgumentList(
                                                        SyntaxFactory.ArgumentList(
                                                            SyntaxFactory.SingletonSeparatedList<ArgumentSyntax>(
                                                                SyntaxFactory.Argument(
                                                                    SyntaxFactory.IdentifierName("mokkedStuffKey"))))),
                                                    SyntaxFactory.ExpressionStatement(
                                                        SyntaxFactory.InvocationExpression(
                                                            SyntaxFactory.MemberAccessExpression(
                                                                SyntaxKind.SimpleMemberAccessExpression,
                                                                SyntaxFactory.ElementAccessExpression(
                                                                    SyntaxFactory.IdentifierName("mokkedActions"))
                                                                .WithArgumentList(
                                                                    SyntaxFactory.BracketedArgumentList(
                                                                        SyntaxFactory.SingletonSeparatedList<ArgumentSyntax>(
                                                                            SyntaxFactory.Argument(
                                                                                SyntaxFactory.IdentifierName("mokkedStuffKey"))))),
                                                                SyntaxFactory.IdentifierName("Invoke"))))),
                                                SyntaxFactory.IfStatement(
                                                    SyntaxFactory.InvocationExpression(
                                                        SyntaxFactory.MemberAccessExpression(
                                                            SyntaxKind.SimpleMemberAccessExpression,
                                                            SyntaxFactory.IdentifierName("mokkedActionsOfT"),
                                                            SyntaxFactory.IdentifierName("ContainsKey")))
                                                    .WithArgumentList(
                                                        SyntaxFactory.ArgumentList(
                                                            SyntaxFactory.SingletonSeparatedList<ArgumentSyntax>(
                                                                SyntaxFactory.Argument(
                                                                    SyntaxFactory.IdentifierName("mokkedStuffKey"))))),
                                                    SyntaxFactory.ExpressionStatement(
                                                        SyntaxFactory.InvocationExpression(
                                                            SyntaxFactory.MemberAccessExpression(
                                                                SyntaxKind.SimpleMemberAccessExpression,
                                                                SyntaxFactory.ElementAccessExpression(
                                                                    SyntaxFactory.IdentifierName("mokkedActionsOfT"))
                                                                .WithArgumentList(
                                                                    SyntaxFactory.BracketedArgumentList(
                                                                        SyntaxFactory.SingletonSeparatedList<ArgumentSyntax>(
                                                                            SyntaxFactory.Argument(
                                                                                SyntaxFactory.IdentifierName("mokkedStuffKey"))))),
                                                                SyntaxFactory.IdentifierName("Invoke")))
                                                        .WithArgumentList(
                                                            SyntaxFactory.ArgumentList(
                                                                SyntaxFactory.SingletonSeparatedList<ArgumentSyntax>(
                                                                    SyntaxFactory.Argument(
                                                                        SyntaxFactory.IdentifierName("first"))))))),
                                                SyntaxFactory.IfStatement(
                                                    SyntaxFactory.InvocationExpression(
                                                        SyntaxFactory.MemberAccessExpression(
                                                            SyntaxKind.SimpleMemberAccessExpression,
                                                            SyntaxFactory.IdentifierName("mokkedActionsOfT2"),
                                                            SyntaxFactory.IdentifierName("ContainsKey")))
                                                    .WithArgumentList(
                                                        SyntaxFactory.ArgumentList(
                                                            SyntaxFactory.SingletonSeparatedList<ArgumentSyntax>(
                                                                SyntaxFactory.Argument(
                                                                    SyntaxFactory.IdentifierName("mokkedStuffKey"))))),
                                                    SyntaxFactory.ExpressionStatement(
                                                        SyntaxFactory.InvocationExpression(
                                                            SyntaxFactory.MemberAccessExpression(
                                                                SyntaxKind.SimpleMemberAccessExpression,
                                                                SyntaxFactory.ElementAccessExpression(
                                                                    SyntaxFactory.IdentifierName("mokkedActionsOfT2"))
                                                                .WithArgumentList(
                                                                    SyntaxFactory.BracketedArgumentList(
                                                                        SyntaxFactory.SingletonSeparatedList<ArgumentSyntax>(
                                                                            SyntaxFactory.Argument(
                                                                                SyntaxFactory.IdentifierName("mokkedStuffKey"))))),
                                                                SyntaxFactory.IdentifierName("Invoke")))
                                                        .WithArgumentList(
                                                            SyntaxFactory.ArgumentList(
                                                                SyntaxFactory.SeparatedList<ArgumentSyntax>(
                                                                    new SyntaxNodeOrToken[]{
                                                                        SyntaxFactory.Argument(
                                                                            SyntaxFactory.IdentifierName("first")),
                                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                        SyntaxFactory.Argument(
                                                                            SyntaxFactory.IdentifierName("second"))}))))))),
                                        SyntaxFactory.MethodDeclaration(
                                            SyntaxFactory.IdentifierName("IMok"),
                                            SyntaxFactory.Identifier("SetCallBase"))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                                        .WithParameterList(
                                            SyntaxFactory.ParameterList(
                                                SyntaxFactory.SingletonSeparatedList<ParameterSyntax>(
                                                    SyntaxFactory.Parameter(
                                                        SyntaxFactory.Identifier("callBase"))
                                                    .WithType(
                                                        SyntaxFactory.PredefinedType(
                                                            SyntaxFactory.Token(SyntaxKind.BoolKeyword))))))
                                        .WithBody(
                                            SyntaxFactory.Block(
                                                SyntaxFactory.ExpressionStatement(
                                                    SyntaxFactory.AssignmentExpression(
                                                        SyntaxKind.SimpleAssignmentExpression,
                                                        SyntaxFactory.MemberAccessExpression(
                                                            SyntaxKind.SimpleMemberAccessExpression,
                                                            SyntaxFactory.ThisExpression(),
                                                            SyntaxFactory.IdentifierName("callBase")),
                                                        SyntaxFactory.IdentifierName("callBase"))),
                                                SyntaxFactory.ReturnStatement(
                                                    SyntaxFactory.ThisExpression()))),
                                        SyntaxFactory.MethodDeclaration(
                                            SyntaxFactory.IdentifierName("IMok"),
                                            SyntaxFactory.Identifier("AddMokkedStuff"))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                                        .WithTypeParameterList(
                                            SyntaxFactory.TypeParameterList(
                                                SyntaxFactory.SingletonSeparatedList<TypeParameterSyntax>(
                                                    SyntaxFactory.TypeParameter(
                                                        SyntaxFactory.Identifier("T1")))))
                                        .WithParameterList(
                                            SyntaxFactory.ParameterList(
                                                SyntaxFactory.SeparatedList<ParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("name"))
                                                        .WithType(
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(SyntaxKind.StringKeyword))),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("stuff"))
                                                        .WithType(
                                                            SyntaxFactory.GenericName(
                                                                SyntaxFactory.Identifier("Action"))
                                                            .WithTypeArgumentList(
                                                                SyntaxFactory.TypeArgumentList(
                                                                    SyntaxFactory.SingletonSeparatedList<TypeSyntax>(
                                                                        SyntaxFactory.IdentifierName("T1")))))})))
                                        .WithBody(
                                            SyntaxFactory.Block(
                                                SyntaxFactory.ExpressionStatement(
                                                    SyntaxFactory.InvocationExpression(
                                                        SyntaxFactory.IdentifierName("EnsureMokked"))),
                                                SyntaxFactory.ExpressionStatement(
                                                    SyntaxFactory.InvocationExpression(
                                                        SyntaxFactory.MemberAccessExpression(
                                                            SyntaxKind.SimpleMemberAccessExpression,
                                                            SyntaxFactory.IdentifierName("mokkedActionsOfT"),
                                                            SyntaxFactory.IdentifierName("Add")))
                                                    .WithArgumentList(
                                                        SyntaxFactory.ArgumentList(
                                                            SyntaxFactory.SeparatedList<ArgumentSyntax>(
                                                                new SyntaxNodeOrToken[]{
                                                                    SyntaxFactory.Argument(
                                                                        SyntaxFactory.IdentifierName("name")),
                                                                    SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                    SyntaxFactory.Argument(
                                                                        SyntaxFactory.ParenthesizedLambdaExpression(
                                                                            SyntaxFactory.InvocationExpression(
                                                                                SyntaxFactory.MemberAccessExpression(
                                                                                    SyntaxKind.SimpleMemberAccessExpression,
                                                                                    SyntaxFactory.IdentifierName("stuff"),
                                                                                    SyntaxFactory.IdentifierName("Invoke")))
                                                                            .WithArgumentList(
                                                                                SyntaxFactory.ArgumentList(
                                                                                    SyntaxFactory.SingletonSeparatedList<ArgumentSyntax>(
                                                                                        SyntaxFactory.Argument(
                                                                                            SyntaxFactory.CastExpression(
                                                                                                SyntaxFactory.IdentifierName("T1"),
                                                                                                SyntaxFactory.IdentifierName("i")))))))
                                                                        .WithParameterList(
                                                                            SyntaxFactory.ParameterList(
                                                                                SyntaxFactory.SingletonSeparatedList<ParameterSyntax>(
                                                                                    SyntaxFactory.Parameter(
                                                                                        SyntaxFactory.Identifier("i"))))))})))),
                                                SyntaxFactory.ReturnStatement(
                                                    SyntaxFactory.ThisExpression()))),
                                        SyntaxFactory.MethodDeclaration(
                                            SyntaxFactory.IdentifierName("IMok"),
                                            SyntaxFactory.Identifier("AddMokkedStuff"))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                                        .WithTypeParameterList(
                                            SyntaxFactory.TypeParameterList(
                                                SyntaxFactory.SeparatedList<TypeParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T1")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T2"))})))
                                        .WithParameterList(
                                            SyntaxFactory.ParameterList(
                                                SyntaxFactory.SeparatedList<ParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("name"))
                                                        .WithType(
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(SyntaxKind.StringKeyword))),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("stuff"))
                                                        .WithType(
                                                            SyntaxFactory.GenericName(
                                                                SyntaxFactory.Identifier("Action"))
                                                            .WithTypeArgumentList(
                                                                SyntaxFactory.TypeArgumentList(
                                                                    SyntaxFactory.SeparatedList<TypeSyntax>(
                                                                        new SyntaxNodeOrToken[]{
                                                                            SyntaxFactory.IdentifierName("T1"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("T2")}))))})))
                                        .WithBody(
                                            SyntaxFactory.Block(
                                                SyntaxFactory.ExpressionStatement(
                                                    SyntaxFactory.InvocationExpression(
                                                        SyntaxFactory.IdentifierName("EnsureMokked"))),
                                                SyntaxFactory.ExpressionStatement(
                                                    SyntaxFactory.InvocationExpression(
                                                        SyntaxFactory.MemberAccessExpression(
                                                            SyntaxKind.SimpleMemberAccessExpression,
                                                            SyntaxFactory.IdentifierName("mokkedActionsOfT2"),
                                                            SyntaxFactory.IdentifierName("Add")))
                                                    .WithArgumentList(
                                                        SyntaxFactory.ArgumentList(
                                                            SyntaxFactory.SeparatedList<ArgumentSyntax>(
                                                                new SyntaxNodeOrToken[]{
                                                                    SyntaxFactory.Argument(
                                                                        SyntaxFactory.IdentifierName("name")),
                                                                    SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                    SyntaxFactory.Argument(
                                                                        SyntaxFactory.ParenthesizedLambdaExpression(
                                                                            SyntaxFactory.InvocationExpression(
                                                                                SyntaxFactory.MemberAccessExpression(
                                                                                    SyntaxKind.SimpleMemberAccessExpression,
                                                                                    SyntaxFactory.IdentifierName("stuff"),
                                                                                    SyntaxFactory.IdentifierName("Invoke")))
                                                                            .WithArgumentList(
                                                                                SyntaxFactory.ArgumentList(
                                                                                    SyntaxFactory.SeparatedList<ArgumentSyntax>(
                                                                                        new SyntaxNodeOrToken[]{
                                                                                            SyntaxFactory.Argument(
                                                                                                SyntaxFactory.CastExpression(
                                                                                                    SyntaxFactory.IdentifierName("T1"),
                                                                                                    SyntaxFactory.IdentifierName("i1"))),
                                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                                            SyntaxFactory.Argument(
                                                                                                SyntaxFactory.CastExpression(
                                                                                                    SyntaxFactory.IdentifierName("T2"),
                                                                                                    SyntaxFactory.IdentifierName("i2")))}))))
                                                                        .WithParameterList(
                                                                            SyntaxFactory.ParameterList(
                                                                                SyntaxFactory.SeparatedList<ParameterSyntax>(
                                                                                    new SyntaxNodeOrToken[]{
                                                                                        SyntaxFactory.Parameter(
                                                                                            SyntaxFactory.Identifier("i1")),
                                                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                                        SyntaxFactory.Parameter(
                                                                                            SyntaxFactory.Identifier("i2"))}))))})))),
                                                SyntaxFactory.ReturnStatement(
                                                    SyntaxFactory.ThisExpression()))),
                                        SyntaxFactory.MethodDeclaration(
                                            SyntaxFactory.IdentifierName("IMok"),
                                            SyntaxFactory.Identifier("AddMokkedStuff"))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                                        .WithTypeParameterList(
                                            SyntaxFactory.TypeParameterList(
                                                SyntaxFactory.SeparatedList<TypeParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T1")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T2")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T3"))})))
                                        .WithParameterList(
                                            SyntaxFactory.ParameterList(
                                                SyntaxFactory.SeparatedList<ParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("name"))
                                                        .WithType(
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(SyntaxKind.StringKeyword))),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("stuff"))
                                                        .WithType(
                                                            SyntaxFactory.GenericName(
                                                                SyntaxFactory.Identifier("Action"))
                                                            .WithTypeArgumentList(
                                                                SyntaxFactory.TypeArgumentList(
                                                                    SyntaxFactory.SeparatedList<TypeSyntax>(
                                                                        new SyntaxNodeOrToken[]{
                                                                            SyntaxFactory.IdentifierName("T1"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("T2"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("T3")}))))})))
                                        .WithBody(
                                            SyntaxFactory.Block(
                                                SyntaxFactory.SingletonList<StatementSyntax>(
                                                    SyntaxFactory.ThrowStatement(
                                                        SyntaxFactory.ObjectCreationExpression(
                                                            SyntaxFactory.IdentifierName("NotImplementedException"))
                                                        .WithArgumentList(
                                                            SyntaxFactory.ArgumentList()))))),
                                        SyntaxFactory.MethodDeclaration(
                                            SyntaxFactory.IdentifierName("IMok"),
                                            SyntaxFactory.Identifier("AddMokkedStuff"))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                                        .WithTypeParameterList(
                                            SyntaxFactory.TypeParameterList(
                                                SyntaxFactory.SeparatedList<TypeParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T1")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T2")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T3")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T4"))})))
                                        .WithParameterList(
                                            SyntaxFactory.ParameterList(
                                                SyntaxFactory.SeparatedList<ParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("name"))
                                                        .WithType(
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(SyntaxKind.StringKeyword))),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("stuff"))
                                                        .WithType(
                                                            SyntaxFactory.GenericName(
                                                                SyntaxFactory.Identifier("Action"))
                                                            .WithTypeArgumentList(
                                                                SyntaxFactory.TypeArgumentList(
                                                                    SyntaxFactory.SeparatedList<TypeSyntax>(
                                                                        new SyntaxNodeOrToken[]{
                                                                            SyntaxFactory.IdentifierName("T1"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("T2"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("T3"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("T4")}))))})))
                                        .WithBody(
                                            SyntaxFactory.Block(
                                                SyntaxFactory.SingletonList<StatementSyntax>(
                                                    SyntaxFactory.ThrowStatement(
                                                        SyntaxFactory.ObjectCreationExpression(
                                                            SyntaxFactory.IdentifierName("NotImplementedException"))
                                                        .WithArgumentList(
                                                            SyntaxFactory.ArgumentList()))))),
                                        SyntaxFactory.MethodDeclaration(
                                            SyntaxFactory.IdentifierName("IMok"),
                                            SyntaxFactory.Identifier("AddMokkedStuff"))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                                        .WithTypeParameterList(
                                            SyntaxFactory.TypeParameterList(
                                                SyntaxFactory.SeparatedList<TypeParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T1")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T2")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T3")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T4")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T5"))})))
                                        .WithParameterList(
                                            SyntaxFactory.ParameterList(
                                                SyntaxFactory.SeparatedList<ParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("name"))
                                                        .WithType(
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(SyntaxKind.StringKeyword))),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("stuff"))
                                                        .WithType(
                                                            SyntaxFactory.GenericName(
                                                                SyntaxFactory.Identifier("Action"))
                                                            .WithTypeArgumentList(
                                                                SyntaxFactory.TypeArgumentList(
                                                                    SyntaxFactory.SeparatedList<TypeSyntax>(
                                                                        new SyntaxNodeOrToken[]{
                                                                            SyntaxFactory.IdentifierName("T1"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("T2"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("T3"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("T4"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("T5")}))))})))
                                        .WithBody(
                                            SyntaxFactory.Block(
                                                SyntaxFactory.SingletonList<StatementSyntax>(
                                                    SyntaxFactory.ThrowStatement(
                                                        SyntaxFactory.ObjectCreationExpression(
                                                            SyntaxFactory.IdentifierName("NotImplementedException"))
                                                        .WithArgumentList(
                                                            SyntaxFactory.ArgumentList()))))),
                                        SyntaxFactory.MethodDeclaration(
                                            SyntaxFactory.IdentifierName("IMok"),
                                            SyntaxFactory.Identifier("AddMokkedStuff"))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                                        .WithTypeParameterList(
                                            SyntaxFactory.TypeParameterList(
                                                SyntaxFactory.SingletonSeparatedList<TypeParameterSyntax>(
                                                    SyntaxFactory.TypeParameter(
                                                        SyntaxFactory.Identifier("TResult")))))
                                        .WithParameterList(
                                            SyntaxFactory.ParameterList(
                                                SyntaxFactory.SeparatedList<ParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("name"))
                                                        .WithType(
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(SyntaxKind.StringKeyword))),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("stuff"))
                                                        .WithType(
                                                            SyntaxFactory.GenericName(
                                                                SyntaxFactory.Identifier("Func"))
                                                            .WithTypeArgumentList(
                                                                SyntaxFactory.TypeArgumentList(
                                                                    SyntaxFactory.SingletonSeparatedList<TypeSyntax>(
                                                                        SyntaxFactory.IdentifierName("TResult")))))})))
                                        .WithBody(
                                            SyntaxFactory.Block(
                                                SyntaxFactory.SingletonList<StatementSyntax>(
                                                    SyntaxFactory.ThrowStatement(
                                                        SyntaxFactory.ObjectCreationExpression(
                                                            SyntaxFactory.IdentifierName("NotImplementedException"))
                                                        .WithArgumentList(
                                                            SyntaxFactory.ArgumentList()))))),
                                        SyntaxFactory.MethodDeclaration(
                                            SyntaxFactory.IdentifierName("IMok"),
                                            SyntaxFactory.Identifier("AddMokkedStuff"))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                                        .WithTypeParameterList(
                                            SyntaxFactory.TypeParameterList(
                                                SyntaxFactory.SeparatedList<TypeParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T1")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("TResult"))})))
                                        .WithParameterList(
                                            SyntaxFactory.ParameterList(
                                                SyntaxFactory.SeparatedList<ParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("name"))
                                                        .WithType(
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(SyntaxKind.StringKeyword))),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("stuff"))
                                                        .WithType(
                                                            SyntaxFactory.GenericName(
                                                                SyntaxFactory.Identifier("Func"))
                                                            .WithTypeArgumentList(
                                                                SyntaxFactory.TypeArgumentList(
                                                                    SyntaxFactory.SeparatedList<TypeSyntax>(
                                                                        new SyntaxNodeOrToken[]{
                                                                            SyntaxFactory.IdentifierName("T1"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("TResult")}))))})))
                                        .WithBody(
                                            SyntaxFactory.Block(
                                                SyntaxFactory.SingletonList<StatementSyntax>(
                                                    SyntaxFactory.ThrowStatement(
                                                        SyntaxFactory.ObjectCreationExpression(
                                                            SyntaxFactory.IdentifierName("NotImplementedException"))
                                                        .WithArgumentList(
                                                            SyntaxFactory.ArgumentList()))))),
                                        SyntaxFactory.MethodDeclaration(
                                            SyntaxFactory.IdentifierName("IMok"),
                                            SyntaxFactory.Identifier("AddMokkedStuff"))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                                        .WithTypeParameterList(
                                            SyntaxFactory.TypeParameterList(
                                                SyntaxFactory.SeparatedList<TypeParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T1")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T2")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("TResult"))})))
                                        .WithParameterList(
                                            SyntaxFactory.ParameterList(
                                                SyntaxFactory.SeparatedList<ParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("name"))
                                                        .WithType(
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(SyntaxKind.StringKeyword))),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("stuff"))
                                                        .WithType(
                                                            SyntaxFactory.GenericName(
                                                                SyntaxFactory.Identifier("Func"))
                                                            .WithTypeArgumentList(
                                                                SyntaxFactory.TypeArgumentList(
                                                                    SyntaxFactory.SeparatedList<TypeSyntax>(
                                                                        new SyntaxNodeOrToken[]{
                                                                            SyntaxFactory.IdentifierName("T1"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("T2"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("TResult")}))))})))
                                        .WithBody(
                                            SyntaxFactory.Block(
                                                SyntaxFactory.SingletonList<StatementSyntax>(
                                                    SyntaxFactory.ThrowStatement(
                                                        SyntaxFactory.ObjectCreationExpression(
                                                            SyntaxFactory.IdentifierName("NotImplementedException"))
                                                        .WithArgumentList(
                                                            SyntaxFactory.ArgumentList()))))),
                                        SyntaxFactory.MethodDeclaration(
                                            SyntaxFactory.IdentifierName("IMok"),
                                            SyntaxFactory.Identifier("AddMokkedStuff"))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                                        .WithTypeParameterList(
                                            SyntaxFactory.TypeParameterList(
                                                SyntaxFactory.SeparatedList<TypeParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T1")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T2")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T3")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("TResult"))})))
                                        .WithParameterList(
                                            SyntaxFactory.ParameterList(
                                                SyntaxFactory.SeparatedList<ParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("name"))
                                                        .WithType(
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(SyntaxKind.StringKeyword))),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("stuff"))
                                                        .WithType(
                                                            SyntaxFactory.GenericName(
                                                                SyntaxFactory.Identifier("Func"))
                                                            .WithTypeArgumentList(
                                                                SyntaxFactory.TypeArgumentList(
                                                                    SyntaxFactory.SeparatedList<TypeSyntax>(
                                                                        new SyntaxNodeOrToken[]{
                                                                            SyntaxFactory.IdentifierName("T1"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("T2"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("T3"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("TResult")}))))})))
                                        .WithBody(
                                            SyntaxFactory.Block(
                                                SyntaxFactory.SingletonList<StatementSyntax>(
                                                    SyntaxFactory.ThrowStatement(
                                                        SyntaxFactory.ObjectCreationExpression(
                                                            SyntaxFactory.IdentifierName("NotImplementedException"))
                                                        .WithArgumentList(
                                                            SyntaxFactory.ArgumentList()))))),
                                        SyntaxFactory.MethodDeclaration(
                                            SyntaxFactory.IdentifierName("IMok"),
                                            SyntaxFactory.Identifier("AddMokkedStuff"))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                                        .WithTypeParameterList(
                                            SyntaxFactory.TypeParameterList(
                                                SyntaxFactory.SeparatedList<TypeParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T1")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T2")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T3")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T4")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("TResult"))})))
                                        .WithParameterList(
                                            SyntaxFactory.ParameterList(
                                                SyntaxFactory.SeparatedList<ParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("name"))
                                                        .WithType(
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(SyntaxKind.StringKeyword))),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("stuff"))
                                                        .WithType(
                                                            SyntaxFactory.GenericName(
                                                                SyntaxFactory.Identifier("Func"))
                                                            .WithTypeArgumentList(
                                                                SyntaxFactory.TypeArgumentList(
                                                                    SyntaxFactory.SeparatedList<TypeSyntax>(
                                                                        new SyntaxNodeOrToken[]{
                                                                            SyntaxFactory.IdentifierName("T1"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("T2"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("T3"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("T4"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("TResult")}))))})))
                                        .WithBody(
                                            SyntaxFactory.Block(
                                                SyntaxFactory.SingletonList<StatementSyntax>(
                                                    SyntaxFactory.ThrowStatement(
                                                        SyntaxFactory.ObjectCreationExpression(
                                                            SyntaxFactory.IdentifierName("NotImplementedException"))
                                                        .WithArgumentList(
                                                            SyntaxFactory.ArgumentList()))))),
                                        SyntaxFactory.MethodDeclaration(
                                            SyntaxFactory.IdentifierName("IMok"),
                                            SyntaxFactory.Identifier("AddMokkedStuff"))
                                        .WithModifiers(
                                            SyntaxFactory.TokenList(
                                                SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                                        .WithTypeParameterList(
                                            SyntaxFactory.TypeParameterList(
                                                SyntaxFactory.SeparatedList<TypeParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T1")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T2")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T3")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T4")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("T5")),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.TypeParameter(
                                                            SyntaxFactory.Identifier("TResult"))})))
                                        .WithParameterList(
                                            SyntaxFactory.ParameterList(
                                                SyntaxFactory.SeparatedList<ParameterSyntax>(
                                                    new SyntaxNodeOrToken[]{
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("name"))
                                                        .WithType(
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(SyntaxKind.StringKeyword))),
                                                        SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                        SyntaxFactory.Parameter(
                                                            SyntaxFactory.Identifier("stuff"))
                                                        .WithType(
                                                            SyntaxFactory.GenericName(
                                                                SyntaxFactory.Identifier("Func"))
                                                            .WithTypeArgumentList(
                                                                SyntaxFactory.TypeArgumentList(
                                                                    SyntaxFactory.SeparatedList<TypeSyntax>(
                                                                        new SyntaxNodeOrToken[]{
                                                                            SyntaxFactory.IdentifierName("T1"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("T2"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("T3"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("T4"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("T5"),
                                                                            SyntaxFactory.Token(SyntaxKind.CommaToken),
                                                                            SyntaxFactory.IdentifierName("TResult")}))))})))
                                        .WithBody(
                                            SyntaxFactory.Block(
                                                SyntaxFactory.SingletonList<StatementSyntax>(
                                                    SyntaxFactory.ThrowStatement(
                                                        SyntaxFactory.ObjectCreationExpression(
                                                            SyntaxFactory.IdentifierName("NotImplementedException"))
                                                        .WithArgumentList(
                                                            SyntaxFactory.ArgumentList())))))}))))))
            .SyntaxTree;
        }
    }
}